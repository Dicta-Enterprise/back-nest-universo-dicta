// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum EstadoGenerico {
  ACTIVO
  INACTIVO
  PENDIENTE
  ELIMINADO
  DESHABILITADO
}

enum EstadoPayment {
  PENDIENTE
  APROBADO
  RECHAZADO
  CANCELADO
  DEVUELTO
  REEMBOLSADO
  FALLIDO
  COMPLETADO
  EN_PROCESO
  EN_ESPERA
  ENVIADO
  ENTREGADO
  RECIBIDO
  EN_REVISION
  EN_VERIFICACION
  VERIFICADO
  NO_VERIFICADO
  ACEPTADO
  PAGADO
  NO_PAGADO
  PENDIENTE_PAGO
  PENDIENTE_APROBACION
  PENDIENTE_ENVIO
  PENDIENTE_ENTREGA
  PENDIENTE_VERIFICACION
  PENDIENTE_REVISION
  PENDIENTE_VERIFICACION_PAGO
}

enum TipoUsuario {
  ADMIN
  CLIENTE
  TRABAJADOR
  DESARROLLADOR
}

model Categoria {
  id                 String         @id @default(auto()) @map("_id") @db.ObjectId
  nombre             String         @unique
  estado             EstadoGenerico @default(ACTIVO)
  fechaCreacion      DateTime       @default(now())
  fechaActualizacion DateTime       @updatedAt     
}

model Idioma {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  nombre String
}

model Profesor {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  nombre   String
  apellido String  @unique
  email    String
}

model Planeta {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  nombre      String  @unique
  descripcion String
  imagen      String
  estado      EstadoGenerico  @default(ACTIVO)
  fechaCreacion  DateTime @default(now())
  fechaActualizacion  DateTime  @updatedAt
}

model Curso {
  id                  String         @id @default(auto()) @map("_id") @db.ObjectId
  nombre              String         @unique
  descripcion         String
  fechaCreacion       DateTime       @default(now())
  fechaActualizacion  DateTime       @updatedAt
  fechaInicio         DateTime
  fechaFinalizacion   DateTime
  cantidadAlumnos     Int
  precio              Float
  estado              EstadoGenerico
  imagen              String
  video               String
  duracion            Float
  categoriaId         String          @db.ObjectId @unique
  profesorId          String?         @db.ObjectId @unique
  idiomaId            String?         @db.ObjectId @unique
  planetaId           String          @db.ObjectId @unique
}

model SubMenu {
  id      String         @id @default(auto()) @map("_id") @db.ObjectId // Identificador único para cada submenú
  nombre  String         @unique
  padreId String?        @db.ObjectId // Referencia al ID del padre (opcional)
  ruta    String         @unique
  estado  EstadoGenerico @default(ACTIVO)
  icono   String // Icono del submenú
  color   String // Color del submenú
  menuId  String?        @db.ObjectId // Referencia al menú al que pertenece
  menu    Menu?          @relation(fields: [id], references: [id]) // Relación con el menú
}

model Menu {
  id       String         @id @default(auto()) @map("_id") @db.ObjectId // Identificador único para cada menú
  nombre   String         @unique
  padreId  String?        @db.ObjectId
  ruta     String
  icono    String
  estado   EstadoGenerico @default(ACTIVO)
  color    String
  submenus SubMenu[]
}

model Galaxia {
  id                 String         @id @default(auto()) @map("_id") @db.ObjectId
  nombre             String         @unique
  descripcion        String
  imagen             String
  estado             EstadoGenerico @default(ACTIVO)
  fechaCreacion      DateTime       @default(now())
  fechaActualizacion DateTime       @updatedAt
}
