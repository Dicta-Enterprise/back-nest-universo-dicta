// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum EstadoGenerico {
  ACTIVO
  INACTIVO
  PENDIENTE
  ELIMINADO
  DESHABILITADO
}

enum EstadoPayment {
  PENDIENTE
  APROBADO
  RECHAZADO
  CANCELADO
  DEVUELTO
  REEMBOLSADO
  FALLIDO
  COMPLETADO
  EN_PROCESO
  EN_ESPERA
  ENVIADO
  ENTREGADO
  RECIBIDO
  EN_REVISION
  EN_VERIFICACION
  VERIFICADO
  NO_VERIFICADO
  ACEPTADO
  PAGADO
  NO_PAGADO
  PENDIENTE_PAGO
  PENDIENTE_APROBACION
  PENDIENTE_ENVIO
  PENDIENTE_ENTREGA
  PENDIENTE_VERIFICACION
  PENDIENTE_REVISION
  PENDIENTE_VERIFICACION_PAGO
}

enum TipoUsuario {
  ADMIN
  CLIENTE
  TRABAJADOR
  DESARROLLADOR
}

model Categoria {
  id                 String         @id @default(auto()) @map("_id") @db.ObjectId
  nombre             String         @unique
  descripcion        String
  estado             EstadoGenerico @default(ACTIVO)
  fechaCreacion      DateTime       @default(now())
  fechaActualizacion DateTime       @updatedAt
  cursos             Curso[] // Relación sin fields/references aquí
}

model Idioma {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  nombre String
  cursos Curso[]
}

model Profesor {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  nombre   String
  apellido String  @unique
  email    String
  cursos   Curso[]
}

model Planeta {
  id                 String         @id @default(auto()) @map("_id") @db.ObjectId
  nombre             String         @unique
  descripcion        String
  imagen             String
  estado             EstadoGenerico @default(ACTIVO)
  fechaCreacion      DateTime       @default(now())
  fechaActualizacion DateTime       @updatedAt
  galaxia            Galaxia?       @relation(fields: [galaxiaId], references: [id])
  galaxiaId          String?        @db.ObjectId
  cursos             Curso[]
}

model Curso {
  id                String         @id @default(auto()) @map("_id") @db.ObjectId
  nombre            String         @unique
  descripcion       String
  fechaCreacion     DateTime
  fechaInicio       DateTime
  fechaFinalizacion DateTime
  cantidadAlumnos   Int
  precio            Float
  profesor          Profesor       @relation(fields: [profesorId], references: [id])
  profesorId        String         @db.ObjectId
  estado            EstadoGenerico
  imagen            String
  video             String
  duracion          Float
  categoria         Categoria      @relation(fields: [categoriaId], references: [id])
  categoriaId       String         @db.ObjectId
  idioma            Idioma?        @relation(fields: [idiomaId], references: [id])
  idiomaId          String?        @db.ObjectId
  planeta           Planeta        @relation(fields: [planetaId], references: [id])
  planetaId         String         @db.ObjectId
}

model Galaxia {
  id                 String         @id @default(auto()) @map("_id") @db.ObjectId
  nombre             String         @unique
  descripcion        String
  imagen             String
  estado             EstadoGenerico @default(ACTIVO)
  fechaCreacion      DateTime       @default(now())
  fechaActualizacion DateTime       @updatedAt
  planetas           Planeta[]
}
